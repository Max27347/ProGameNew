import os
from dotenv import load_dotenv
from telegram import Update, Bot
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram –ø–æ–¥–∞—Ä–∫–æ–≤ üéÅ")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
async def send_gift(user_id, gift_name):
    bot = Bot(token=BOT_TOKEN)
    message = f"üéÅ –í–∞–º –≤—ã–ø–∞–ª –ø–æ–¥–∞—Ä–æ–∫: {gift_name}"
    await bot.send_message(chat_id=user_id, text=message)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    app.add_handler(CommandHandler("start", start))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()



import asyncio
from tonpy import TonWallet

async def send_nft_gift(sender_seed_phrase, recipient_address, nft_address):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—à–µ–ª—å–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender_wallet = TonWallet(seed_phrase=sender_seed_phrase)
    await sender_wallet.connect()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ NFT
    await sender_wallet.transfer_nft(
        nft_address=nft_address,
        recipient_address=recipient_address
    )

    print(f"NFT-–ø–æ–¥–∞—Ä–æ–∫ {nft_address} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –∞–¥—Ä–µ—Å {recipient_address}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
sender_seed = "–≤–∞—à–∞ seed-—Ñ—Ä–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"
recipient = "TON-–∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
nft = "–∞–¥—Ä–µ—Å NFT-–ø–æ–¥–∞—Ä–∫–∞"

asyncio.run(send_nft_gift(sender_seed, recipient, nft))
